<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bas Van De Sande on Azure Coding Architect</title><link>https://azurecodingarchitect.com/author/bas-van-de-sande/</link><description>Recent content in Bas Van De Sande on Azure Coding Architect</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 22 Feb 2025 14:39:51 +0100</lastBuildDate><atom:link href="https://azurecodingarchitect.com/author/bas-van-de-sande/index.xml" rel="self" type="application/rss+xml"/><item><title>Entity Relationship Diagram Creator</title><link>https://azurecodingarchitect.com/page/erd-creator/</link><pubDate>Sun, 21 May 2023 10:51:20 +0200</pubDate><guid>https://azurecodingarchitect.com/page/erd-creator/</guid><description>&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>A couple of years ago I developed the Entity Relationship Diagram Creator XRMToolbox plug-in, as a community tool. Shortly after, my focus was more-and-more on the Azure space and the JourneyIntoCRM.com blog vanished into oblivion.
Fast forward to may 2023&amp;hellip; I was preparing for the Microsoft Certified: Power Platform Solution Architect Expert certification.&lt;/p>
&lt;p>While preparing I noticed that Microsoft recommended this plug-in to visualize datamodels in the Dataverse. For me a nice opportunity to overhaul the toolbox plug-in and to bring it back to life again. First step&amp;hellip; reinstate the user manual and update the plug-in to reference to the new documentation location.&lt;/p></description></item><item><title>The Art of Conversation</title><link>https://azurecodingarchitect.com/posts/artofconversation/</link><pubDate>Sat, 22 Feb 2025 14:39:51 +0100</pubDate><guid>https://azurecodingarchitect.com/posts/artofconversation/</guid><description>&lt;p>In the 1990&amp;rsquo;s when I did my bachelor in computer science, teachers told us that we would be replaced by 4GL languages. Languages in which end-users would describe how applications should work. At that time we laughed at them, saying we saw the exact opposite. Oh dear, we were right. Code became complexer, new concepts arrived on the horizon and software development matured. Fast forward to the 2020&amp;rsquo;s&amp;hellip;&lt;/p>
&lt;p>Over the last year, I&amp;rsquo;ve been giving a lot of GitHub Copilot training sessions world wide. Sessions in which I learned the attendees what GitHub Copilot could mean for them and how they could get the most out of it. In that time I noticed that I was particular a fan of GitHub Copilot chat. A Chat interface in which I could talk to my bestie, asking him all kinds of questions. My bestie would answer my questions as good as possible.&lt;/p></description></item><item><title>Quick tip: Get in control by using your GitHub context</title><link>https://azurecodingarchitect.com/posts/github-context/</link><pubDate>Fri, 16 Feb 2024 15:35:43 +0100</pubDate><guid>https://azurecodingarchitect.com/posts/github-context/</guid><description>&lt;p>GitHib actions and workflows are very powerful by nature. They help me to build and deploy my Azure environments, without having me to do all the tedious and errorprone work. I create a pull request, have it peer reviewed and once approved my environments are provisoned the way I envisioned it. This is also the case at my current assignment for a large organization.
Last year the organization decided that a new change management system (which name I refuse to pronounce) should handle all changes.
This means that every step in the process needs to be documented and approved conform ITIL processes.&lt;/p></description></item><item><title>Quick tip: Find permissions in RBAC roles easily</title><link>https://azurecodingarchitect.com/posts/find-rbac-permissions/</link><pubDate>Wed, 24 Jan 2024 19:00:52 +0100</pubDate><guid>https://azurecodingarchitect.com/posts/find-rbac-permissions/</guid><description>&lt;p>When building infrastructures in Azure, you sometimes come to a point in which you need to add an additional action to a RBAC role in order to access certain Azure resources. In our case we needed to add read permissions on the Front Door activity logs to an internal security administrator role. The way I used to do it, was browing MS-learn to can find a comprehensive list of built-in roles. For me this was a cumberstone process, until today. One of my co-workers - Martin Bouchery - showed me an easy trick to find all RBAC roles in Azure that have a specific action tied to its profile. A walk through&amp;hellip;&lt;/p></description></item><item><title>Where is that documentation? A tale on setting up diagnostic settings...</title><link>https://azurecodingarchitect.com/posts/diagnosticlogging/</link><pubDate>Fri, 29 Sep 2023 10:54:52 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/diagnosticlogging/</guid><description>&lt;p>I&amp;rsquo;m a big fan of Azure and building infrastructure on it using IaC (Infrastructure as Code) and deploy it through pipelines (Azure DevOps) or workflows (Github). The last two years, I primarily used Bicep to build the infrastructure. This is often a very satisfying experience but in some cases it can be quite frustrating. Frustrating because I can&amp;rsquo;t find the information that I need in the MS Learn documentation at the location where I would expect it to be.&lt;/p></description></item><item><title>A nightmare on FrontDoor in Bicep...</title><link>https://azurecodingarchitect.com/posts/frontdoor/</link><pubDate>Tue, 18 Jul 2023 22:36:57 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/frontdoor/</guid><description>&lt;p>For some reason I seem to attract the most exotic scenarios when it comes to building Infrastructure as Code (IaC). This time it was no different. For a client I&amp;rsquo;m working on building an environment in which disaster recovery is a top priority. Besides being zone redundant, the client requires region redundancy as well, in case a complete Azure region gets wiped out by a disaster or a combination of disasters&amp;hellip; My imagination gets triggered and I envision all kinds of apocalyptic movie scenarios.&lt;/p></description></item><item><title>Note to self: fix invalid GitHub credentials in VSCode</title><link>https://azurecodingarchitect.com/posts/gitcredentials/</link><pubDate>Tue, 13 Jun 2023 20:58:18 +0100</pubDate><guid>https://azurecodingarchitect.com/posts/gitcredentials/</guid><description>&lt;p>From time to time I start working on projects for new customers. As soon as I start I receive an invitation from Github to join the customer&amp;rsquo;s Github organization. Most of the organization have a SAML based single sign on (SSO).
After joining the organization using my personal Github account, I&amp;rsquo;m able to work on the repositories on which I have access. So far so good&amp;hellip;&lt;/p>
&lt;p>Then the moment comes that I need to clone the repository, which can be a hassle from time-to-time. Normally I clone the repository using VSCode. After cloning the repository, I start working by adding my own features.&lt;/p></description></item><item><title>GHAS - How to use CodeQL custom queries?</title><link>https://azurecodingarchitect.com/posts/ghas-starting-with-codeql/</link><pubDate>Fri, 10 Feb 2023 18:58:18 +0100</pubDate><guid>https://azurecodingarchitect.com/posts/ghas-starting-with-codeql/</guid><description>&lt;p>Over the last two years, I have seen a growing awareness when it comes to zero trust computing. When organizations look at zero trust computing, the first thing that comes into mind is getting the infrastructure secure. Assuming breach, ensuring that there are multiple layers of security applied. As an engineer I love seeing this growing awareness. What a lot of organizations seem to forget is that perhaps the most important part of securing its data starts with analyzing the source code of its proprietary software.&lt;/p></description></item><item><title>How to prepare for the Azure Cybersecurity Architect SC-100 exam</title><link>https://azurecodingarchitect.com/posts/sc100/</link><pubDate>Fri, 20 Jan 2023 13:18:54 +0100</pubDate><guid>https://azurecodingarchitect.com/posts/sc100/</guid><description>&lt;p>&lt;strong>Frustration!&lt;/strong> If one word should describe the learning experience using Microsoft Learn (other words could have been: indigestable, wut?!, uncohesive etcetera). I have never encountered a Microsoft Learning path that was so hard to digest.
Then you could ask yourself: &amp;ldquo;Is the subject that hard?&amp;rdquo;. It is not the subject, it is the way the self-study was written. In this blog post, I will share the way I prepared for this exam.&lt;/p></description></item><item><title>Project Volterra - Windows Dev Kit 2023 - take 1</title><link>https://azurecodingarchitect.com/posts/volterra-take1/</link><pubDate>Wed, 28 Dec 2022 13:20:25 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/volterra-take1/</guid><description>&lt;p>At &lt;a href="https://xpirit.com">Xpirit&lt;/a> we have an &lt;a href="https://youtu.be/5-RDUK7dXvg">Innovation Day&lt;/a> multiple times per year. The idea of an Innovation Day is to work on technologies or topics that spark your interest. Anything is allowed, as long as it has nothing to do with any customer assignments. Learning and knowledge sharing is the goal of such a day.&lt;/p>
&lt;p>At our last Innovation Day in november, I picked up the idea to get some hands on experience with the Windows Dev Kit 2023 also known as Project Volterra. Technology minded as we are, we purchased two of these boxes at the office for experimentation (big shout out to @marcelv).&lt;/p></description></item><item><title>Minikube, a lightweight Kubernetes-to-go!</title><link>https://azurecodingarchitect.com/posts/minikube/</link><pubDate>Fri, 02 Dec 2022 13:20:25 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/minikube/</guid><description>&lt;p>From time-to-time I find myself tinkering with Kubernetes. I love the idea that I can create any type of workload (e.g. a simple webapp or a backend service), pick it up and put it somewhere else to run. Not having to care if it is in the cloud or on an on-premise cluster. However developing your application, testing its core in a local docker container and then deploying it to kubernetes can sometimes be cumberstone.&lt;/p></description></item><item><title>Real world mocking! Http Service testing in C# using Wiremock.Net</title><link>https://azurecodingarchitect.com/posts/wiremock_net/</link><pubDate>Fri, 28 Oct 2022 14:09:18 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/wiremock_net/</guid><description>&lt;p>At Xpirit we have a culture of never ending learning. One of the best ways of learning new things, is by doing it. To take the plunge and do the deep dive.&lt;/p>
&lt;p>In this case my colleague &lt;a href="https://xpirit.com/team/kristofr/">Kristoff Riebbels&lt;/a> learned me some new tricks by introducing me into the world of WireMock.Net. Together we wrote a magazine article for &lt;a href="https://xpirit.com/download/xprt-magazine-n-13/">Xpirit Magazine #13&lt;/a>.&lt;/p>
&lt;p>In this blog post I want to share this article with you. The magazine can be downloaded from the link above.&lt;/p></description></item><item><title>Just do it! Work on your certifications.</title><link>https://azurecodingarchitect.com/posts/certification/</link><pubDate>Sun, 28 Aug 2022 15:08:19 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/certification/</guid><description>&lt;p>If you asked me 5 years ago if I would do any Microsoft exam, I would have told you that getting certified is something that you need to do at the start of your career. Besides that I would have told you that once your work experience and technical influence increases, you can rely on your seniority. I have to admit that for a long time I could get away with using the correct buzzwords at the correct moment supported by a certain arrogance.&lt;/p></description></item><item><title>Over-The-Air device update - IoT with C#</title><link>https://azurecodingarchitect.com/posts/ota-update/</link><pubDate>Mon, 01 Aug 2022 12:32:35 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/ota-update/</guid><description>&lt;p>Developing solutions for IoT devices can be a challenging task, this can also apply for getting a device at its final destination in order to do its job.
When time passes by, it is likely that either requirements or conditions are changing and that the device is not capable anymore of doing its job. In other words, it needs to be updated.
This is where the real problems may start. In many cases devices are not physically accessible or there are simply too many devices in the field to do manual updates. This is where over-the-air (OTA) updates will save your day.&lt;/p></description></item><item><title>Techorama Antwerp 2022, human connection</title><link>https://azurecodingarchitect.com/posts/techorama/</link><pubDate>Thu, 26 May 2022 16:15:48 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/techorama/</guid><description>&lt;p>Techorama is a conference that has long been on my list of conferences to attend, but for some reason I never went. Looking back I think I had this idea that world class conferences could only be held in the US (or in a place far-far away from home) with thousands of visitors. I was dead wrong.
What the organizers understood perfectly is that in order to have a world class conference, you should offer the same smooth, convenient and rich experience with the very best speakers, but then at a smaller scale.&lt;/p></description></item><item><title>Register ESP32 to DPS &amp; IoT hub - IoT with C#</title><link>https://azurecodingarchitect.com/posts/iot-nanoframework-dps/</link><pubDate>Thu, 28 Apr 2022 21:09:06 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/iot-nanoframework-dps/</guid><description>&lt;p>In my &lt;a href="https://azurecodingarchitect.com/posts/prepare-for-iot/">previous post&lt;/a> I flashed my ESP32 with the nanoframework.net, allowing me to write C# code in Visual Studio with all bells and whistles. As life goes&amp;hellip; the device landed in my drawer until this week where I had some time to experiment. This time I wanted to hook up the device to Azure IoT hub using the Device Provisioning Service (DPS) which brings me one step closer to my goal, performing device updates over-the-air&amp;hellip;&lt;/p></description></item><item><title>From 0 to 100 in 30 minutes - IoT with C#</title><link>https://azurecodingarchitect.com/posts/prepare-for-iot/</link><pubDate>Tue, 15 Mar 2022 20:28:06 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/prepare-for-iot/</guid><description>&lt;p>My interest for the Internet of Things (IoT) was sparked many moons ago, way before the name was born. Back in the days I wrote software for PalmOS devices, and I was intrigued by having raw processor power in my Pocket. Don&amp;rsquo;t get me wrong, back then we where talking Megahertz instead of Gigahertz and Kilobyte instead of Gigabyte. Having such limitations in processing power and memory tickled my creativity.
When I had the opportunity to control hardware (gps, electronic locks etc) using the little devices I was sold. Fastforward to a couple of years ago when the market was flooded with Arduinos and Raspberry Pis, I picked up an old hobby and started developing again, this time playing around with sensors. The big disadvantage was that you had to resort to plain old C and a crippled development environment, until now&amp;hellip;&lt;/p></description></item><item><title>Running a persistent SQL Server in Docker</title><link>https://azurecodingarchitect.com/posts/persistent-sql-docker/</link><pubDate>Sat, 05 Mar 2022 17:46:30 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/persistent-sql-docker/</guid><description>&lt;p>In IT we always want to work with the latest and greatest, it&amp;rsquo;s in our DNA to explore new technologies. From time-to-time you get confronted with legacy technologies, robust but boring. One of such things is a piece of software I wrote more than 15 years ago for a friend. It was an application using a SQL Server database that controlled a couple of weighing terminals connected over RS232. Controlling machines is every geek&amp;rsquo;s dream.
Every couple of years my friend asks me if I can help him to improve the software I wrote for him, this time it was no different.&lt;/p></description></item><item><title>Note to self: localhost in kestrel is localhost</title><link>https://azurecodingarchitect.com/posts/localhost_in_kestrel/</link><pubDate>Wed, 23 Feb 2022 17:20:25 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/localhost_in_kestrel/</guid><description>&lt;p>In one of the projects I&amp;rsquo;m involved in, I ran into a problem. In this project we are building a solution that is running on a Linux based Edge Device connected to Azure. On the Edge device, a &lt;a href="https://k3s.io/">k3s&lt;/a> cluster hosts a number of services required by the solution. In order to be able to develop and debug on a Linux environment, I equiped my system with Hyper-V, an internal NAT switch and a fresh copy of Ubuntu.&lt;/p></description></item><item><title>Sometimes you need to reboot...</title><link>https://azurecodingarchitect.com/posts/reboot/</link><pubDate>Fri, 18 Feb 2022 11:31:42 +0100</pubDate><guid>https://azurecodingarchitect.com/posts/reboot/</guid><description>&lt;p>Almost a year ago I created this blog&amp;hellip; I mean not exactly this blog, but its predecessor &amp;ldquo;blog.somethingazure.com&amp;rdquo;.
I thought that the name did match the content. Fast Forward a couple of months in time&amp;hellip;. I learned that my job as Azure Coding Architect involved quite a few more technology areas than just Azure. Furthermore I was not happy with the look-and-feel of the blog; it was visually not attractive. Time for a major overhaul!&lt;/p></description></item><item><title>Multi-staged GitHub Pipeline</title><link>https://azurecodingarchitect.com/posts/mutistage-gh-pipeline/</link><pubDate>Sat, 11 Sep 2021 19:46:30 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/mutistage-gh-pipeline/</guid><description>&lt;p>At the moment I&amp;rsquo;m working on some infrastructure pipelines to build and deploy Azure infrastructure for one of our clients. For me a cool project as I&amp;rsquo;m learning to work with technologies such as Bicep and GitHub actions. In this project we use GitHub actions for the CI/CD process. In this process every time a pull request is merged in the main branch, an automated build, test and deployment process is triggered.&lt;/p></description></item><item><title>Certification Renewal</title><link>https://azurecodingarchitect.com/posts/certification-renewal/</link><pubDate>Mon, 09 Aug 2021 19:30:08 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/certification-renewal/</guid><description>&lt;p>When Microsoft introduced the new role based certifaction paths, a new expiration policy was set as well. After two years (as of july 2021, one year) the certification will expire, and you have to renew it in order to keep it.&lt;/p>
&lt;p>At the time, I was among the first people who passed the new certifications and back then the new expiration policy was unclear. There was no information on how to renew the certifications and costs involved, until a few weeks ago&amp;hellip;&lt;/p></description></item><item><title>DevOps All the Way</title><link>https://azurecodingarchitect.com/posts/devops-all-the-way/</link><pubDate>Fri, 30 Jul 2021 09:00:06 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/devops-all-the-way/</guid><description>&lt;p>In &lt;a href="https://azurecodingarchitect.com/posts/practice-what-you-preach/" title="Practice what you Preach">Practice what you preach&lt;/a> I wrote that I decided to host my blog on the Azure platform, using Hugo as content management system, Blob Storage and Azure CDN for hosting the blog. The only thing lacking is a workflow of writing content, approving it and publishing it on the web.&lt;/p>
&lt;p>As I work for a &lt;a href="https://www.xpirit.com">company&lt;/a> that specialized on Azure and DevOps, I decided to take the plunge and go DevOps all the way. Doing some googling, I found out that there were some great tutorials out there to use an Azure DevOps CI/CD pipeline in combination with Hugo to compile and publish the blog. As a starter I followed this &lt;a href="https://medium.com/@kurtmkurtm/setting-up-a-blog-with-the-hugo-framework-on-azure-blob-storage-12605609a90">writing&lt;/a> by kurtmkurtm.&lt;/p></description></item><item><title>Practice what you preach!</title><link>https://azurecodingarchitect.com/posts/practice-what-you-preach/</link><pubDate>Tue, 27 Jul 2021 10:14:26 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/practice-what-you-preach/</guid><description>&lt;p>When I decided to start blogging again, I knew I wanted to talk about the things I face, working with Azure.
In the past I used to blog as well, back then I blogged on my Journey into CRM which I started in 2014.&lt;/p>
&lt;p>In 2014 the state of technology was much different; one would use WordPress (or similar). The main choice was host it yourself or host it at a hosting provider. Back then I chose the way of hosting it myself on a small linux appliance from my basement.&lt;/p></description></item><item><title>Introduction</title><link>https://azurecodingarchitect.com/posts/introduction/</link><pubDate>Sat, 24 Jul 2021 12:20:25 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/introduction/</guid><description>&lt;p>You have found my personal blog. This blog will be focused around Microsoft Azure technologies, hence the name &amp;ldquo;something Azure&amp;rdquo;. Let me introduce myself, my name is Bas van de Sande and I work as an Azure Coding Architect at &lt;a href="https://www.xpirit.com">&lt;strong>Xpirit&lt;/strong>&lt;/a> in the Netherlands.&lt;/p>
&lt;p>As part of my daily job, I offer technical guidance, advice and hands-on assistance for a large number of (global) companies in various industries.&lt;/p>
&lt;p>I have been working with Microsoft technologies since 1995 in various technical roles, since that time I have seen a large number of technologies passing by (Visual Studio technologies, SQL Server, BizTalk, Microsoft.Net, SharePoint, Dynamics CE etc). In one of my former jobs I have been doing product development on the Dynamics CE platform annd back then I used to blog very actively on my journey into CRM. Over the years I came to realize, that the continuous story of my life is system integration.&lt;/p></description></item></channel></rss>