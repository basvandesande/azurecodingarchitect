<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nanoframework on Azure Coding Architect</title><link>https://azurecodingarchitect.com/tags/nanoframework/</link><description>Recent content in nanoframework on Azure Coding Architect</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 01 Aug 2022 12:32:35 +0200</lastBuildDate><atom:link href="https://azurecodingarchitect.com/tags/nanoframework/index.xml" rel="self" type="application/rss+xml"/><item><title>Over-The-Air device update - IoT with C#</title><link>https://azurecodingarchitect.com/posts/ota-update/</link><pubDate>Mon, 01 Aug 2022 12:32:35 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/ota-update/</guid><description>Developing solutions for IoT devices can be a challenging task, this can also apply for getting a device at its final destination in order to do its job. When time passes by, it is likely that either requirements or conditions are changing and that the device is not capable anymore of doing its job. In other words, it needs to be updated. This is where the real problems may start. In many cases devices are not physically accessible or there are simply too many devices in the field to do manual updates.</description></item><item><title>Register ESP32 to DPS &amp; IoT hub - IoT with C#</title><link>https://azurecodingarchitect.com/posts/iot-nanoframework-dps/</link><pubDate>Thu, 28 Apr 2022 21:09:06 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/iot-nanoframework-dps/</guid><description>In my previous post I flashed my ESP32 with the nanoframework.net, allowing me to write C# code in Visual Studio with all bells and whistles. As life goes&amp;hellip; the device landed in my drawer until this week where I had some time to experiment. This time I wanted to hook up the device to Azure IoT hub using the Device Provisioning Service (DPS) which brings me one step closer to my goal, performing device updates over-the-air&amp;hellip;</description></item><item><title>From 0 to 100 in 30 minutes - IoT with C#</title><link>https://azurecodingarchitect.com/posts/prepare-for-iot/</link><pubDate>Tue, 15 Mar 2022 20:28:06 +0200</pubDate><guid>https://azurecodingarchitect.com/posts/prepare-for-iot/</guid><description>My interest for the Internet of Things (IoT) was sparked many moons ago, way before the name was born. Back in the days I wrote software for PalmOS devices, and I was intrigued by having raw processor power in my Pocket. Don&amp;rsquo;t get me wrong, back then we where talking Megahertz instead of Gigahertz and Kilobyte instead of Gigabyte. Having such limitations in processing power and memory tickled my creativity. When I had the opportunity to control hardware (gps, electronic locks etc) using the little devices I was sold.</description></item></channel></rss>